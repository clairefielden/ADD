{
    "version": 3,
    "run_type": "curriculum_learning",
    "model_type": "default",
    "logging": {
        "sender": "http://0.0.0.1",
        "recipient": "local",
        "logging_frequency": 100,
        "logging_path": "/scratch/fldcla001/ADD/results/exploitHigh/progress_f.log",
        "result_folder": "/scratch/fldcla001/ADD/results/exploitHigh/results_f",
        "job_name": "Exploitative Behaviour with High Threshold",
        "job_id": "Exploit_High_F"
    },
    "parameters": {
        "prior": "/scratch/fldcla001/ADD/models/random.prior.new",
        "agent": "/scratch/fldcla001/ADD/models/random.prior.new",
        "curriculum_type": "automated",
        "curriculum_strategy": {
            "name": "user_defined",
            "max_num_iterations": 20000,
            "batch_size": 128,
            "learning_rate": 0.0001,
            "sigma": 128,
            "learning_strategy": {
                "name": "dap_single_query",
                "parameters": {
                    "sigma": 120
                }
            },
            "diversity_filter": {
                "name": "NoFilter",
                "bucket_size": 25,
                "minscore": 0.4,
                "minsimilarity": 0.4
            },
            "inception": {
                "smiles": [],
                "memory_size": 100,
                "sample_size": 10
            },
            "curriculum_objectives": [
                {
                    "scoring_function": {
                        "name": "custom_product",
                        "parallel": true,
                        "parameters": [
                            {
                                "component_type": "tanimoto_similarity",
                                "name": "Tanimoto similarity",
                                "weight": 1,
                                "specific_parameters": {
                                    "smiles": [
                                        "C1=CC2=C(C=CC=N2)N=C1",
                                        "C1=CC=NC(=C1)N",
                                        "C1=CC2=NC=CN2N=C1"
                                    ]
                                }
                            }
                        ]
                    },
                    "score_threshold": 0.35
                },
                {
                    "scoring_function": {
                        "name": "custom_product",
                        "parallel": true,
                        "parameters": [
                            {
                                "component_type": "qed_score",
                                "name": "QED Score",
                                "weight": 1
                            }
                        ]
                    },
                    "score_threshold": 0.75
                },
                {
                    "scoring_function": {
                        "name": "custom_product",
                        "parallel": true,
                        "parameters": [
                            {
                                "component_type": "jaccard_distance",
                                "name": "SA Score",
                                "weight": 1
                            }
                        ]
                    },
                    "score_threshold": 7.5
                }
            ]
        },
        "production_strategy": {
            "name": "standard",
            "retain_inception": true,
            "number_of_steps": 5000,
            "batch_size": 128,
            "learning_rate": 0.0001,
            "sigma": 128,
            "learning_strategy": {
                "name": "dap_single_query",
                "parameters": {
                    "sigma": 120
                }
            },
            "diversity_filter": {
                "name": "NoFilter",
                "bucket_size": 25,
                "minscore": 0.4,
                "minsimilarity": 0.4
            },
            "inception": {
                "smiles": [],
                "memory_size": 100,
                "sample_size": 10
            },
            "scoring_function": {
                "name": "custom_product",
                "parallel": false,
                "parameters": [
                    {
                        "component_type": "dockstream",
                        "name": "Autodock Vina Docking",
                        "weight": 1,
                        "specific_parameters": {
                            "transformation": {
                                "transformation_type": "reverse_sigmoid",
                                "low": -12,
                                "high": -8,
                                "k": 0.25
                            },
                            "configuration_path": "/scratch/fldcla001/ADD/src/exploitHigh/docking_f.json",
                            "docker_script_path": "/scratch/fldcla001/ADD/DockStream/docker.py",
                            "environment_path": "/home/fldcla001/.conda/envs/DockStream/bin/python"
                        }
                    }
                ]
            }
        }
    }
}